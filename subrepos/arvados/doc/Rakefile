#!/usr/bin/env rake
# Copyright (C) The Arvados Authors. All rights reserved.
#
# SPDX-License-Identifier: CC-BY-SA-3.0

require "rubygems"
require "colorize"

task :generate => [ :realclean, 'sdk/python/arvados/index.html', 'sdk/R/arvados/index.html' ] do
  vars = ['baseurl', 'arvados_api_host', 'arvados_workbench_host']
  vars.each do |v|
    if ENV[v]
      website.config.h[v] = ENV[v]
    end
  end
end

file "sdk/python/arvados/index.html" do |t|
  `which epydoc`
  if $? == 0
    STDERR.puts `epydoc --html --parse-only -o sdk/python/arvados ../sdk/python/arvados/ 2>&1`
    raise if $? != 0
  else
    puts "Warning: epydoc not found, Python documentation will not be generated".colorize(:light_red)
  end
end

file "sdk/R/arvados/index.html" do |t|
  `which R`
  if $? == 0
    tgt = Dir.pwd
    Dir.mkdir("sdk/R")
    Dir.mkdir("sdk/R/arvados")
    docfiles = []
    Dir.chdir("../sdk/R/") do
      STDERR.puts `Rscript createDoc.R README.Rmd #{tgt}/sdk/R/README.md 2>&1`
      Dir.entries("man").each do |rd|
        if rd[-3..-1] == ".Rd"
          htmlfile = "#{rd[0..-4]}.html"
          `R CMD Rdconv -t html man/#{rd} > #{tgt}/sdk/R/arvados/#{htmlfile}`
          docfiles << htmlfile
        end
      end
    end
    raise if $? != 0

    File.open("sdk/R/README.md", "r") do |rd|
    File.open("sdk/R/index.html.md", "w") do |fn|
      fn.write(<<-EOF
---
layout: default
navsection: sdk
navmenu: R
title: "R SDK Overview"
...

#{rd.read.gsub(/^```$/, "~~~").gsub(/^```(\w)$/, "~~~\\1")}
EOF
              )
      end
    end

    File.open("sdk/R/arvados/index.html.textile.liquid", "w") do |fn|
      fn.write(<<-EOF
---
layout: default
navsection: sdk
navmenu: R
title: "R Reference"
...
{% comment %}
Copyright (C) The Arvados Authors. All rights reserved.

SPDX-License-Identifier: CC-BY-SA-3.0
{% endcomment %}

EOF
              )

      docfiles.sort.each do |d|
        fn.write("* \"#{d[0..-6]}\":#{d}\n")
      end

    end
  else
    puts "Warning: R not found, R documentation will not be generated".colorize(:light_red)
  end
end

task :linkchecker => [ :generate ] do
  Dir.chdir(".site") do
    `which linkchecker`
    if $? == 0
      system "linkchecker index.html --ignore-url='!file://'" or exit $?.exitstatus
    else
      puts "Warning: linkchecker not found, skipping run".colorize(:light_red)
    end
  end
end

task :clean do
  rm_rf "sdk/python/arvados"
  rm_rf "sdk/R"
end

require "zenweb/tasks"
load "zenweb-textile.rb"
load "zenweb-liquid.rb"

task :extra_wirings do
  $website.pages["sdk/python/python.html.textile.liquid"].depends_on("sdk/python/arvados/index.html")
end
